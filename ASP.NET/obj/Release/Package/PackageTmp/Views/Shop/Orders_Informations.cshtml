@using Microsoft.AspNet.Identity
@using NET.Models

@model ASP.NET.Models.User_Informations

@{
    ViewBag.Title = "Orders_Informations";
}

<div class="Page_Title">
    <h4>Orders Informations</h4>
</div>

@if (Session["Shopping_Cart"] == null)
{
    <br />
    <h3 style="text-align: center; color: #e62e00">Shopping cart is empty.</h3>

    <div style="margin: 50px 0 50px 0;">
        @Html.ActionLink("Back to Shop", "index", null, new { @class = "btn btn-outline-danger btn-lg btn-block" })
    </div>
}
else
{
    // Copy data from session
    var Data = (User_Informations)Session["User_Informations"];

    using (Html.BeginForm("Index","Payment"))
    {
        @Html.AntiForgeryToken()

        <hr />
        <div class="form-horizontal">

            <input id="UID" name="UID" type="hidden" value="@User.Identity.GetUserId()">

            <div class="form-group">
                @Html.LabelFor(model => model.Fname, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Fname, new { htmlAttributes = new { @class = "form-control", @Value = Data.Fname } })
                    @Html.ValidationMessageFor(model => model.Fname, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Lname, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Lname, new { htmlAttributes = new { @class = "form-control", @Value = Data.Lname } })
                    @Html.ValidationMessageFor(model => model.Lname, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Phone, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Phone, new { htmlAttributes = new { @class = "form-control", @Value = Data.Phone } })
                    @Html.ValidationMessageFor(model => model.Phone, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control", @Value = Data.Email } })
                    @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Postal_Code, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Postal_Code, new { htmlAttributes = new { @class = "form-control", @Value = Data.Postal_Code } })
                    @Html.ValidationMessageFor(model => model.Postal_Code, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.City, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.City, new { htmlAttributes = new { @class = "form-control", @Value = Data.City } })
                    @Html.ValidationMessageFor(model => model.City, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Street, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Street, new { htmlAttributes = new { @class = "form-control", @Value = Data.Street } })
                    @Html.ValidationMessageFor(model => model.Street, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.House_Number, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.House_Number, new { htmlAttributes = new { @class = "form-control", @Value = Data.House_Number } })
                    @Html.ValidationMessageFor(model => model.House_Number, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" value="Create" class="btn btn-default" />
                </div>
            </div>
        </div>
        <hr />
    }

    <div style="margin: 50px 0 50px 0;">
        @Html.ActionLink("Back to Shopping Cart", "ShoppingCart", "Shop", null, new { @class = "btn btn-outline-danger btn-lg btn-block" })
    </div>

}

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}